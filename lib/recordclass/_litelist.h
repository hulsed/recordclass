/* Generated by Cython 0.29.24 */

#ifndef __PYX_HAVE__recordclass___litelist
#define __PYX_HAVE__recordclass___litelist

#include "Python.h"
struct PyLiteListObject;

/* "recordclass/_litelist.pyx":86
 * 
 * @cython.no_gc
 * cdef public class litelist[object PyLiteListObject, type PyLiteListType]:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t size
 *     cdef Py_ssize_t allocated
 */
struct PyLiteListObject {
  PyObject_HEAD
  struct __pyx_vtabstruct_11recordclass_9_litelist_litelist *__pyx_vtab;
  Py_ssize_t size;
  Py_ssize_t allocated;
  PyObject **items;
};

#ifndef __PYX_HAVE_API__recordclass___litelist

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(PyTypeObject) PyLiteListType;

#endif /* !__PYX_HAVE_API__recordclass___litelist */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC init_litelist(void);
#else
PyMODINIT_FUNC PyInit__litelist(void);
#endif

#endif /* !__PYX_HAVE__recordclass___litelist */
